{"version":3,"sources":["components/randomQuote/randomQuote.module.css","components/randomQuote/randomQuote.js","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["module","exports","RandomQuote","state","quotes","currentQuote","previousQuote","currentAuthor","previousAuthor","currentNum","previousNum","current","counter","getRandomNum","randomNumber","Math","floor","random","setState","quote","author","console","log","getPrevious","getCurrent","a","axios","get","catch","error","response","this","data","className","styles","button","onClick","quoteTitle","quoteWrapper","quoteAuthor","Component","App","background","wrapper","header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1a8e502.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"randomQuote_button__nS8q4\",\"quoteWrapper\":\"randomQuote_quoteWrapper__iLeIR\",\"quoteTitle\":\"randomQuote_quoteTitle__1CaIm\",\"quote\":\"randomQuote_quote__3kIoK\",\"quoteAuthor\":\"randomQuote_quoteAuthor__2OeIb\"};","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport styles from './randomQuote.module.css';\r\n\r\nclass RandomQuote extends Component{\r\n  state = {\r\n    quotes: {},\r\n    currentQuote: 'quote will appear here...',\r\n    previousQuote: '',\r\n    currentAuthor: '',\r\n    previousAuthor: '',\r\n    currentNum: 0,\r\n    previousNum: 0,\r\n    current: true,\r\n    counter: 0\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const response = await axios.get('https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json')\r\n    .catch(error => {\r\n      console.log(error.response);\r\n    });\r\n    this.setState({quotes: response.data});\r\n  }\r\n\r\n  getRandomNum = () => {\r\n    const {quotes, currentNum, previousNum, currentQuote, previousQuote, counter} = this.state;\r\n    let randomNumber = Math.floor((Math.random() * 102));\r\n    this.setState({previousNum: currentNum});\r\n    this.setState({currentNum: randomNumber});\r\n    // console.log(\"this is current num: \" + currentNum + \" and this is previous one: \" + previousNum);\r\n    this.setState({currentQuote: quotes[currentNum].quote});\r\n    this.setState({currentAuthor: quotes[currentNum].author})\r\n    console.log(quotes[currentNum]);\r\n    // to prevent displaying \"previous\" btn\r\n    if(counter >= 1){\r\n      this.setState({previousQuote: quotes[previousNum].quote})\r\n      this.setState({previousAuthor: quotes[previousNum].author})\r\n    }\r\n    this.setState({current: true})\r\n    this.setState({counter: counter+1})\r\n  }\r\n\r\n  getPrevious = () => {\r\n    const {previousQuote} = this.state;\r\n    if(previousQuote === ''){\r\n      this.setState({current: true});\r\n    }\r\n    else if(previousQuote !== ''){\r\n    this.setState({current: false});\r\n    }\r\n  }\r\n\r\n  getCurrent = () => {\r\n    this.setState({current: true});\r\n  }\r\n\r\n  render()  {\r\n    const {currentQuote, currentAuthor, previousQuote, previousAuthor, current, counter} = this.state;\r\n    return(\r\n      <div>\r\n        <button className={styles.button} onClick={() => this.getRandomNum()}>Get new random quote</button>\r\n        {current ? <button className={styles.button} onClick={() => this.getPrevious()}>Show previous quote</button> : <button className={styles.button} onClick={() => this.getCurrent()}>Show current quote</button>}\r\n        <div>\r\n          {counter === 0 ? '' : current ? <h3 className={styles.quoteTitle}>this is current quote...</h3> : <h3 className={styles.quoteTitle}>this is previous quote...</h3>}\r\n          <div className={styles.quoteWrapper}> \r\n            <h3 className={styles.quote}>{current ? currentQuote : previousQuote}</h3>\r\n            <h3 className={styles.quoteAuthor}>{counter === 0 ? '' : current ? `~ ${currentAuthor}` : `~ ${previousAuthor}`}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default RandomQuote;","import React from 'react'\nimport RandomQuote from './components/randomQuote/randomQuote';\nimport styles from './App.module.css'\n\nfunction App() {\n  return (\n    <div className={styles.background}>\n      <div className={styles.wrapper}>\n        <header>\n          <h3 className={styles.header}>Random quoter</h3>\n        </header>\n        <RandomQuote/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"App_background__1vORB\",\"wrapper\":\"App_wrapper__HY2Gl\",\"header\":\"App_header__2Qnpk\"};"],"sourceRoot":""}